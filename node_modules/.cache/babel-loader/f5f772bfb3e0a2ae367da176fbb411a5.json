{"ast":null,"code":"import _slicedToArray from \"/Users/heoseongjae/Documents/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/banto-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/heoseongjae/Documents/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/banto-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/heoseongjae/Documents/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/banto-web/src/components/CardInputForm.js\";\n\nimport { Stack, TextField, Button } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport React, { useState } from \"react\";\nimport Cards from \"react-credit-cards\";\nimport CustomCenterBox from \"./CustomCenterBox\";\nimport Payment from \"payment\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nvar WhiteBorderTextField = styled(TextField)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  label[data-shrink=\\\"false\\\"] + .MuiInputBase-formControl {\\n    border: 1px solid white;\\n  }\\n  .MuiOutlinedInput-input {\\n    color: white;\\n  }\\n  label {\\n    color: white;\\n  }\\n  & label.Mui-focused {\\n    color: #00c853;\\n  }\\n  & .MuiOutlinedInput-root {\\n    &.Mui-focused fieldset {\\n      border-color: #00c853;\\n    }\\n    ,\\n    fieldset {\\n      border-color: white;\\n    }\\n  }\\n\"])));\n\nfunction clearNumber() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return value.replace(/\\D+/g, \"\");\n}\n\nfunction formatCreditCardNumber(value) {\n  if (!value) {\n    return value;\n  }\n\n  var issuer = Payment.fns.cardType(value);\n  var clearValue = clearNumber(value);\n  var nextValue;\n\n  switch (issuer) {\n    case \"amex\":\n      nextValue = \"\".concat(clearValue.slice(0, 4), \" \").concat(clearValue.slice(4, 10), \" \").concat(clearValue.slice(10, 15));\n      break;\n\n    case \"dinersclub\":\n      nextValue = \"\".concat(clearValue.slice(0, 4), \" \").concat(clearValue.slice(4, 10), \" \").concat(clearValue.slice(10, 14));\n      break;\n\n    default:\n      nextValue = \"\".concat(clearValue.slice(0, 4), \" \").concat(clearValue.slice(4, 8), \" \").concat(clearValue.slice(8, 12), \" \").concat(clearValue.slice(12, 19));\n      break;\n  }\n\n  return nextValue.trim();\n}\n\nfunction formatExpirationDate(value) {\n  var clearValue = clearNumber(value);\n\n  if (clearValue.length >= 3) {\n    return \"\".concat(clearValue.slice(0, 2), \"/\").concat(clearValue.slice(2, 4));\n  }\n\n  return clearValue;\n}\n\nfunction formatCVC(value, prevValue) {\n  var allValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var clearValue = clearNumber(value);\n  var maxLength = 4;\n\n  if (allValues.number) {\n    var issuer = Payment.fns.cardType(allValues.number);\n    maxLength = issuer === \"amex\" ? 4 : 3;\n  }\n\n  return clearValue.slice(0, maxLength);\n}\n\nfunction CardInputForm(_ref) {\n  var onSubmit = _ref.onSubmit,\n      onClose = _ref.onClose;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      realNumber = _useState4[0],\n      setRealNumber = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      expiry = _useState8[0],\n      setExpiry = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      realExpiry = _useState10[0],\n      setRealExpiry = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      cvc = _useState12[0],\n      setCvc = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPassword = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      birth = _useState16[0],\n      setBirth = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      focus = _useState18[0],\n      setFocus = _useState18[1];\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      backgroundColor: \"#0B0B0C\",\n      pt: \"10%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    locale: {\n      valid: \"유효기간\"\n    },\n    placeholders: {\n      name: \"\"\n    },\n    number: number,\n    name: name,\n    expiry: expiry,\n    cvc: cvc,\n    focused: focus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 5,\n      pr: \"15%\",\n      pl: \"15%\",\n      borderRadius: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 19\n    },\n    type: \"tel\",\n    name: \"number\",\n    label: \"\\uCE74\\uB4DC \\uBC88\\uD638\",\n    value: number,\n    required: true,\n    onChange: function onChange(e) {\n      setRealNumber(clearNumber(e.target.value));\n      setNumber(formatCreditCardNumber(e.target.value));\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 5,\n      pattern: \"dd/dd\"\n    },\n    type: \"tel\",\n    name: \"expiry\",\n    label: \"\\uC720\\uD6A8\\uAE30\\uAC04\",\n    value: expiry,\n    placeholder: \"MM/YY\",\n    required: true,\n    error: function error(value) {\n      \"/dd/dd/\".test(value);\n    },\n    helperText: validation() ? \"특수기호나 한글은 입력 하실 수 없습니다.\" : \"\",\n    onChange: function onChange(e) {\n      setRealExpiry(clearNumber(e.target.value));\n      setExpiry(formatExpirationDate(e.target.value));\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 2\n    },\n    type: \"password\",\n    name: \"password\",\n    label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC55E 2\\uC790\\uB9AC\",\n    value: password,\n    required: true,\n    onChange: function onChange(e) {\n      setPassword(formatCVC(e.target.value));\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 6\n    },\n    type: \"tel\",\n    name: \"birth\",\n    label: \"\\uC0DD\\uB144\\uC6D4\\uC77C 6\\uC790\\uB9AC\",\n    placeholder: \"YYMMDD\",\n    value: birth,\n    required: true,\n    onChange: function onChange(e) {\n      setBirth(e.target.value);\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CustomCenterBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    sx: {\n      border: \"1px solid #00C853\",\n      color: \"#00C853\",\n      width: \"30%\",\n      m: 2\n    },\n    onClick: function onClick() {\n      onSubmit(realNumber, realExpiry, birth, password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, \"\\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"error\",\n    sx: {\n      width: \"30%\",\n      m: 2\n    },\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, \"\\uCDE8\\uC18C\"))));\n}\n\nexport default CardInputForm;","map":{"version":3,"sources":["/Users/heoseongjae/Documents/작업/banto-web/src/components/CardInputForm.js"],"names":["Stack","TextField","Button","Box","styled","React","useState","Cards","CustomCenterBox","Payment","WhiteBorderTextField","clearNumber","value","replace","formatCreditCardNumber","issuer","fns","cardType","clearValue","nextValue","slice","trim","formatExpirationDate","length","formatCVC","prevValue","allValues","maxLength","number","CardInputForm","onSubmit","onClose","setNumber","realNumber","setRealNumber","name","setName","expiry","setExpiry","realExpiry","setRealExpiry","cvc","setCvc","password","setPassword","birth","setBirth","focus","setFocus","backgroundColor","pt","valid","p","pr","pl","borderRadius","e","target","pattern","test","validation","border","color","width","m"],"mappings":";;;;;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,eAAzC;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,aAA5B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,2CAAP;AAEA,IAAMC,oBAAoB,GAAGN,MAAM,CAACH,SAAD,CAAT,mdAA1B;;AAwBA,SAASU,WAAT,GAAiC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AAC/B,SAAOA,KAAK,CAACC,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAP;AACD;;AAED,SAASC,sBAAT,CAAgCF,KAAhC,EAAuC;AACrC,MAAI,CAACA,KAAL,EAAY;AACV,WAAOA,KAAP;AACD;;AAED,MAAMG,MAAM,GAAGN,OAAO,CAACO,GAAR,CAAYC,QAAZ,CAAqBL,KAArB,CAAf;AACA,MAAMM,UAAU,GAAGP,WAAW,CAACC,KAAD,CAA9B;AACA,MAAIO,SAAJ;;AAEA,UAAQJ,MAAR;AACE,SAAK,MAAL;AACEI,MAAAA,SAAS,aAAMD,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAN,cAAgCF,UAAU,CAACE,KAAX,CACvC,CADuC,EAEvC,EAFuC,CAAhC,cAGJF,UAAU,CAACE,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAHI,CAAT;AAIA;;AACF,SAAK,YAAL;AACED,MAAAA,SAAS,aAAMD,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAN,cAAgCF,UAAU,CAACE,KAAX,CACvC,CADuC,EAEvC,EAFuC,CAAhC,cAGJF,UAAU,CAACE,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAHI,CAAT;AAIA;;AACF;AACED,MAAAA,SAAS,aAAMD,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAN,cAAgCF,UAAU,CAACE,KAAX,CACvC,CADuC,EAEvC,CAFuC,CAAhC,cAGJF,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAHI,cAGuBF,UAAU,CAACE,KAAX,CAAiB,EAAjB,EAAqB,EAArB,CAHvB,CAAT;AAIA;AAlBJ;;AAqBA,SAAOD,SAAS,CAACE,IAAV,EAAP;AACD;;AAED,SAASC,oBAAT,CAA8BV,KAA9B,EAAqC;AACnC,MAAMM,UAAU,GAAGP,WAAW,CAACC,KAAD,CAA9B;;AAEA,MAAIM,UAAU,CAACK,MAAX,IAAqB,CAAzB,EAA4B;AAC1B,qBAAUL,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAV,cAAoCF,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAApC;AACD;;AAED,SAAOF,UAAP;AACD;;AAED,SAASM,SAAT,CAAmBZ,KAAnB,EAA0Ba,SAA1B,EAAqD;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;AACnD,MAAMR,UAAU,GAAGP,WAAW,CAACC,KAAD,CAA9B;AACA,MAAIe,SAAS,GAAG,CAAhB;;AAEA,MAAID,SAAS,CAACE,MAAd,EAAsB;AACpB,QAAMb,MAAM,GAAGN,OAAO,CAACO,GAAR,CAAYC,QAAZ,CAAqBS,SAAS,CAACE,MAA/B,CAAf;AACAD,IAAAA,SAAS,GAAGZ,MAAM,KAAK,MAAX,GAAoB,CAApB,GAAwB,CAApC;AACD;;AAED,SAAOG,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoBO,SAApB,CAAP;AACD;;AAED,SAASE,aAAT,OAA8C;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,OAAW,QAAXA,OAAW;;AAC5C,kBAA4BzB,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOsB,MAAP;AAAA,MAAeI,SAAf;;AACA,mBAAoC1B,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAO2B,UAAP;AAAA,MAAmBC,aAAnB;;AACA,mBAAwB5B,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAO6B,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4B9B,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAO+B,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAoChC,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOiC,UAAP;AAAA,MAAmBC,aAAnB;;AACA,oBAAsBlC,QAAQ,CAAC,EAAD,CAA9B;AAAA;AAAA,MAAOmC,GAAP;AAAA,MAAYC,MAAZ;;AACA,oBAAgCpC,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOqC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAA0BtC,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOuC,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAA0BxC,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOyC,KAAP;AAAA,MAAcC,QAAd;;AAEA,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,EAAE,EAAE;AAAlC,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KADV;AAEE,IAAA,YAAY,EAAE;AAAEhB,MAAAA,IAAI,EAAE;AAAR,KAFhB;AAGE,IAAA,MAAM,EAAEP,MAHV;AAIE,IAAA,IAAI,EAAEO,IAJR;AAKE,IAAA,MAAM,EAAEE,MALV;AAME,IAAA,GAAG,EAAEI,GANP;AAOE,IAAA,OAAO,EAAEM,KAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAaE,oBAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFK,MAAAA,CAAC,EAAE,CADD;AAEFC,MAAAA,EAAE,EAAE,KAFF;AAGFC,MAAAA,EAAE,EAAE,KAHF;AAIFC,MAAAA,YAAY,EAAE;AAJZ,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AACE,IAAA,UAAU,EAAE;AACV5B,MAAAA,SAAS,EAAE;AADD,KADd;AAIE,IAAA,IAAI,EAAC,KAJP;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,KAAK,EAAC,2BANR;AAOE,IAAA,KAAK,EAAEC,MAPT;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,QAAQ,EAAE,kBAAC4B,CAAD,EAAO;AACftB,MAAAA,aAAa,CAACvB,WAAW,CAAC6C,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAAZ,CAAb;AACAoB,MAAAA,SAAS,CAAClB,sBAAsB,CAAC0C,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAAvB,CAAT;AACD,KAZH;AAaE,IAAA,OAAO,EAAE,iBAAC4C,CAAD;AAAA,aAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAAStB,IAAV,CAAf;AAAA,KAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAiBE,oBAAC,oBAAD;AACE,IAAA,UAAU,EAAE;AACVR,MAAAA,SAAS,EAAE,CADD;AAEV+B,MAAAA,OAAO,EAAE;AAFC,KADd;AAKE,IAAA,IAAI,EAAC,KALP;AAME,IAAA,IAAI,EAAC,QANP;AAOE,IAAA,KAAK,EAAC,0BAPR;AAQE,IAAA,KAAK,EAAErB,MART;AASE,IAAA,WAAW,EAAC,OATd;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,KAAK,EAAE,eAACzB,KAAD,EAAW;AAChB,gBAAU+C,IAAV,CAAe/C,KAAf;AACD,KAbH;AAcE,IAAA,UAAU,EACRgD,UAAU,KAAK,yBAAL,GAAiC,EAf/C;AAiBE,IAAA,QAAQ,EAAE,kBAACJ,CAAD,EAAO;AACfhB,MAAAA,aAAa,CAAC7B,WAAW,CAAC6C,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAAZ,CAAb;AACA0B,MAAAA,SAAS,CAAChB,oBAAoB,CAACkC,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAArB,CAAT;AACD,KApBH;AAqBE,IAAA,OAAO,EAAE,iBAAC4C,CAAD;AAAA,aAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAAStB,IAAV,CAAf;AAAA,KArBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,eAyDE,oBAAC,oBAAD;AACE,IAAA,UAAU,EAAE;AACVR,MAAAA,SAAS,EAAE;AADD,KADd;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,KAAK,EAAC,+CANR;AAOE,IAAA,KAAK,EAAEgB,QAPT;AAQE,IAAA,QAAQ,MARV;AASE,IAAA,QAAQ,EAAE,kBAACa,CAAD,EAAO;AACfZ,MAAAA,WAAW,CAACpB,SAAS,CAACgC,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAAV,CAAX;AACD,KAXH;AAYE,IAAA,OAAO,EAAE,iBAAC4C,CAAD;AAAA,aAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAAStB,IAAV,CAAf;AAAA,KAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,eAwEE,oBAAC,oBAAD;AACE,IAAA,UAAU,EAAE;AACVR,MAAAA,SAAS,EAAE;AADD,KADd;AAIE,IAAA,IAAI,EAAC,KAJP;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,KAAK,EAAC,wCANR;AAOE,IAAA,WAAW,EAAC,QAPd;AAQE,IAAA,KAAK,EAAEkB,KART;AASE,IAAA,QAAQ,MATV;AAUE,IAAA,QAAQ,EAAE,kBAACW,CAAD,EAAO;AACfV,MAAAA,QAAQ,CAACU,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAAR;AACD,KAZH;AAaE,IAAA,OAAO,EAAE,iBAAC4C,CAAD;AAAA,aAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAAStB,IAAV,CAAf;AAAA,KAbX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxEF,CADF,CARF,eA8GE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,EAAE,EAAE;AACF0B,MAAAA,MAAM,EAAE,mBADN;AAEFC,MAAAA,KAAK,EAAE,SAFL;AAGFC,MAAAA,KAAK,EAAE,KAHL;AAIFC,MAAAA,CAAC,EAAE;AAJD,KADN;AAOE,IAAA,OAAO,EAAE,mBAAM;AACblC,MAAAA,QAAQ,CAACG,UAAD,EAAaM,UAAb,EAAyBM,KAAzB,EAAgCF,QAAhC,CAAR;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAcE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,EAAE,EAAE;AAAEoB,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,CAAC,EAAE;AAAnB,KAHN;AAIE,IAAA,OAAO,EAAEjC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdF,CA9GF,CAbF,CADF;AAsJD;;AAED,eAAeF,aAAf","sourcesContent":["import { Stack, TextField, Button } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport React, { useState } from \"react\";\nimport Cards from \"react-credit-cards\";\nimport CustomCenterBox from \"./CustomCenterBox\";\nimport Payment from \"payment\";\nimport \"react-credit-cards/es/styles-compiled.css\";\n\nconst WhiteBorderTextField = styled(TextField)`\n  label[data-shrink=\"false\"] + .MuiInputBase-formControl {\n    border: 1px solid white;\n  }\n  .MuiOutlinedInput-input {\n    color: white;\n  }\n  label {\n    color: white;\n  }\n  & label.Mui-focused {\n    color: #00c853;\n  }\n  & .MuiOutlinedInput-root {\n    &.Mui-focused fieldset {\n      border-color: #00c853;\n    }\n    ,\n    fieldset {\n      border-color: white;\n    }\n  }\n`;\n\nfunction clearNumber(value = \"\") {\n  return value.replace(/\\D+/g, \"\");\n}\n\nfunction formatCreditCardNumber(value) {\n  if (!value) {\n    return value;\n  }\n\n  const issuer = Payment.fns.cardType(value);\n  const clearValue = clearNumber(value);\n  let nextValue;\n\n  switch (issuer) {\n    case \"amex\":\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 15)}`;\n      break;\n    case \"dinersclub\":\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 14)}`;\n      break;\n    default:\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        8\n      )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`;\n      break;\n  }\n\n  return nextValue.trim();\n}\n\nfunction formatExpirationDate(value) {\n  const clearValue = clearNumber(value);\n\n  if (clearValue.length >= 3) {\n    return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\n  }\n\n  return clearValue;\n}\n\nfunction formatCVC(value, prevValue, allValues = {}) {\n  const clearValue = clearNumber(value);\n  let maxLength = 4;\n\n  if (allValues.number) {\n    const issuer = Payment.fns.cardType(allValues.number);\n    maxLength = issuer === \"amex\" ? 4 : 3;\n  }\n\n  return clearValue.slice(0, maxLength);\n}\n\nfunction CardInputForm({ onSubmit, onClose }) {\n  const [number, setNumber] = useState(\"\");\n  const [realNumber, setRealNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [realExpiry, setRealExpiry] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [birth, setBirth] = useState(\"\");\n  const [focus, setFocus] = useState(\"\");\n\n  return (\n    <Box sx={{ backgroundColor: \"#0B0B0C\", pt: \"10%\" }}>\n      <Box>\n        <Cards\n          locale={{ valid: \"유효기간\" }}\n          placeholders={{ name: \"\" }}\n          number={number}\n          name={name}\n          expiry={expiry}\n          cvc={cvc}\n          focused={focus}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          p: 5,\n          pr: \"15%\",\n          pl: \"15%\",\n          borderRadius: \"15px\",\n        }}\n      >\n        <form>\n          <Stack spacing={3}>\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 19,\n              }}\n              type=\"tel\"\n              name=\"number\"\n              label=\"카드 번호\"\n              value={number}\n              required\n              onChange={(e) => {\n                setRealNumber(clearNumber(e.target.value));\n                setNumber(formatCreditCardNumber(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 5,\n                pattern: \"dd/dd\",\n              }}\n              type=\"tel\"\n              name=\"expiry\"\n              label=\"유효기간\"\n              value={expiry}\n              placeholder=\"MM/YY\"\n              required\n              error={(value) => {\n                \"/dd/dd/\".test(value);\n              }}\n              helperText={\n                validation() ? \"특수기호나 한글은 입력 하실 수 없습니다.\" : \"\"\n              }\n              onChange={(e) => {\n                setRealExpiry(clearNumber(e.target.value));\n                setExpiry(formatExpirationDate(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            {/* <WhiteBorderTextField\n              inputProps={{\n                maxLength: 4,\n                pattern: \"d*\",\n              }}\n              type=\"tel\"\n              name=\"cvc\"\n              label=\"CVC\"\n              value={cvc}\n              required\n              onChange={(e) => {\n                setCvc(formatCVC(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            /> */}\n\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 2,\n              }}\n              type=\"password\"\n              name=\"password\"\n              label=\"비밀번호 앞 2자리\"\n              value={password}\n              required\n              onChange={(e) => {\n                setPassword(formatCVC(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 6,\n              }}\n              type=\"tel\"\n              name=\"birth\"\n              label=\"생년월일 6자리\"\n              placeholder=\"YYMMDD\"\n              value={birth}\n              required\n              onChange={(e) => {\n                setBirth(e.target.value);\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            {/* <WhiteBorderTextField\n              type=\"text\"\n              name=\"name\"\n              label=\"별칭\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            /> */}\n          </Stack>\n        </form>\n\n        <CustomCenterBox>\n          <Button\n            sx={{\n              border: \"1px solid #00C853\",\n              color: \"#00C853\",\n              width: \"30%\",\n              m: 2,\n            }}\n            onClick={() => {\n              onSubmit(realNumber, realExpiry, birth, password);\n            }}\n          >\n            등록\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"error\"\n            sx={{ width: \"30%\", m: 2 }}\n            onClick={onClose}\n          >\n            취소\n          </Button>\n        </CustomCenterBox>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CardInputForm;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/heoseongjae/Documents/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/banto-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/heoseongjae/Documents/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/banto-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _jsxFileName = \"/Users/heoseongjae/Documents/\\u110C\\u1161\\u11A8\\u110B\\u1165\\u11B8/banto-web/src/components/CardInputForm.js\";\n\nimport { Stack, TextField, Button } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport React, { useState } from \"react\";\nimport Cards from \"react-credit-cards\";\nimport CustomCenterBox from \"./CustomCenterBox\";\nimport Payment from \"payment\";\nimport \"react-credit-cards/es/styles-compiled.css\";\nvar WhiteBorderTextField = styled(TextField)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  .MuiTextField-root {\\n    border-color: 1px solid white;\\n  }\\n  label {\\n    color: white;\\n  }\\n  & label.Mui-focused {\\n    color: white;\\n  }\\n  & .MuiOutlinedInput-root {\\n    &.Mui-focused fieldset { // - Set the Input border when parent is focused \\n      border-color: green;\\n    },\\n  }\\n\"])));\n\nfunction clearNumber() {\n  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return value.replace(/\\D+/g, \"\");\n}\n\nfunction formatCreditCardNumber(value) {\n  if (!value) {\n    return value;\n  }\n\n  var issuer = Payment.fns.cardType(value);\n  var clearValue = clearNumber(value);\n  var nextValue;\n\n  switch (issuer) {\n    case \"amex\":\n      nextValue = \"\".concat(clearValue.slice(0, 4), \" \").concat(clearValue.slice(4, 10), \" \").concat(clearValue.slice(10, 15));\n      break;\n\n    case \"dinersclub\":\n      nextValue = \"\".concat(clearValue.slice(0, 4), \" \").concat(clearValue.slice(4, 10), \" \").concat(clearValue.slice(10, 14));\n      break;\n\n    default:\n      nextValue = \"\".concat(clearValue.slice(0, 4), \" \").concat(clearValue.slice(4, 8), \" \").concat(clearValue.slice(8, 12), \" \").concat(clearValue.slice(12, 19));\n      break;\n  }\n\n  return nextValue.trim();\n}\n\nfunction formatExpirationDate(value) {\n  var clearValue = clearNumber(value);\n\n  if (clearValue.length >= 3) {\n    return \"\".concat(clearValue.slice(0, 2), \"/\").concat(clearValue.slice(2, 4));\n  }\n\n  return clearValue;\n}\n\nfunction formatCVC(value, prevValue) {\n  var allValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var clearValue = clearNumber(value);\n  var maxLength = 4;\n\n  if (allValues.number) {\n    var issuer = Payment.fns.cardType(allValues.number);\n    maxLength = issuer === \"amex\" ? 4 : 3;\n  }\n\n  return clearValue.slice(0, maxLength);\n}\n\nfunction CardInputForm(_ref) {\n  var onSubmit = _ref.onSubmit,\n      onClose = _ref.onClose;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      month = _useState6[0],\n      setMonth = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      expiry = _useState8[0],\n      setExpiry = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cvc = _useState10[0],\n      setCvc = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      focus = _useState12[0],\n      setFocus = _useState12[1];\n\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      backgroundColor: \"#0B0B0C\",\n      pt: \"20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Cards, {\n    locale: {\n      valid: \"유효기간\"\n    },\n    placeholders: {\n      name: \"별칭\"\n    },\n    number: number,\n    name: name,\n    expiry: expiry,\n    cvc: cvc,\n    focused: focus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      p: 4,\n      padding: \"20px\",\n      borderRadius: \"15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 19\n    },\n    type: \"tel\",\n    name: \"number\",\n    label: \"\\uCE74\\uB4DC \\uBC88\\uD638\",\n    value: number,\n    required: true,\n    onChange: function onChange(e) {\n      setNumber(formatCreditCardNumber(e.target.value));\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 5,\n      pattern: \"dd/dd\"\n    },\n    type: \"tel\",\n    name: \"expiry\",\n    label: \"\\uC720\\uD6A8\\uAE30\\uAC04\",\n    value: expiry,\n    placeholder: \"MM/YY\",\n    required: true,\n    onChange: function onChange(e) {\n      setExpiry(formatExpirationDate(e.target.value));\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    inputProps: {\n      maxLength: 3,\n      pattern: \"d*\"\n    },\n    type: \"tel\",\n    name: \"cvc\",\n    label: \"CVC\",\n    value: cvc,\n    required: true,\n    onChange: function onChange(e) {\n      setCvc(formatCVC(e.target.value));\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(WhiteBorderTextField, {\n    type: \"text\",\n    name: \"name\",\n    label: \"\\uBCC4\\uCE6D\",\n    value: name,\n    onChange: function onChange(e) {\n      setName(e.target.value);\n    },\n    onFocus: function onFocus(e) {\n      return setFocus(e.target.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(CustomCenterBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"\\uB4F1\\uB85D\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, \"\\uB2EB\\uAE30\"))));\n}\n\nexport default CardInputForm;","map":{"version":3,"sources":["/Users/heoseongjae/Documents/작업/banto-web/src/components/CardInputForm.js"],"names":["Stack","TextField","Button","Box","styled","React","useState","Cards","CustomCenterBox","Payment","WhiteBorderTextField","clearNumber","value","replace","formatCreditCardNumber","issuer","fns","cardType","clearValue","nextValue","slice","trim","formatExpirationDate","length","formatCVC","prevValue","allValues","maxLength","number","CardInputForm","onSubmit","onClose","setNumber","name","setName","month","setMonth","expiry","setExpiry","cvc","setCvc","focus","setFocus","backgroundColor","pt","valid","p","padding","borderRadius","e","target","pattern"],"mappings":"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","sourcesContent":["import { Stack, TextField, Button } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport React, { useState } from \"react\";\nimport Cards from \"react-credit-cards\";\nimport CustomCenterBox from \"./CustomCenterBox\";\nimport Payment from \"payment\";\nimport \"react-credit-cards/es/styles-compiled.css\";\n\nconst WhiteBorderTextField = styled(TextField)`\n  .MuiTextField-root {\n    border-color: 1px solid white;\n  }\n  label {\n    color: white;\n  }\n  & label.Mui-focused {\n    color: white;\n  }\n  & .MuiOutlinedInput-root {\n    &.Mui-focused fieldset { // - Set the Input border when parent is focused \n      border-color: green;\n    },\n  }\n`;\n\nfunction clearNumber(value = \"\") {\n  return value.replace(/\\D+/g, \"\");\n}\n\nfunction formatCreditCardNumber(value) {\n  if (!value) {\n    return value;\n  }\n\n  const issuer = Payment.fns.cardType(value);\n  const clearValue = clearNumber(value);\n  let nextValue;\n\n  switch (issuer) {\n    case \"amex\":\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 15)}`;\n      break;\n    case \"dinersclub\":\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 14)}`;\n      break;\n    default:\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        8\n      )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`;\n      break;\n  }\n\n  return nextValue.trim();\n}\n\nfunction formatExpirationDate(value) {\n  const clearValue = clearNumber(value);\n\n  if (clearValue.length >= 3) {\n    return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\n  }\n\n  return clearValue;\n}\n\nfunction formatCVC(value, prevValue, allValues = {}) {\n  const clearValue = clearNumber(value);\n  let maxLength = 4;\n\n  if (allValues.number) {\n    const issuer = Payment.fns.cardType(allValues.number);\n    maxLength = issuer === \"amex\" ? 4 : 3;\n  }\n\n  return clearValue.slice(0, maxLength);\n}\n\nfunction CardInputForm({ onSubmit, onClose }) {\n  const [number, setNumber] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [month, setMonth] = useState(\"\");\n  const [expiry, setExpiry] = useState(\"\");\n  const [cvc, setCvc] = useState(\"\");\n  const [focus, setFocus] = useState(\"\");\n\n  return (\n    <Box sx={{ backgroundColor: \"#0B0B0C\", pt: \"20%\" }}>\n      <Box>\n        <Cards\n          locale={{ valid: \"유효기간\" }}\n          placeholders={{ name: \"별칭\" }}\n          number={number}\n          name={name}\n          expiry={expiry}\n          cvc={cvc}\n          focused={focus}\n        />\n      </Box>\n\n      <Box\n        sx={{\n          p: 4,\n          padding: \"20px\",\n          borderRadius: \"15px\",\n        }}\n      >\n        <form>\n          <Stack spacing={3}>\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 19,\n              }}\n              type=\"tel\"\n              name=\"number\"\n              label=\"카드 번호\"\n              value={number}\n              required\n              onChange={(e) => {\n                setNumber(formatCreditCardNumber(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 5,\n                pattern: \"dd/dd\",\n              }}\n              type=\"tel\"\n              name=\"expiry\"\n              label=\"유효기간\"\n              value={expiry}\n              placeholder=\"MM/YY\"\n              required\n              onChange={(e) => {\n                setExpiry(formatExpirationDate(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            <WhiteBorderTextField\n              inputProps={{\n                maxLength: 3,\n                pattern: \"d*\",\n              }}\n              type=\"tel\"\n              name=\"cvc\"\n              label=\"CVC\"\n              value={cvc}\n              required\n              onChange={(e) => {\n                setCvc(formatCVC(e.target.value));\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n\n            <WhiteBorderTextField\n              type=\"text\"\n              name=\"name\"\n              label=\"별칭\"\n              value={name}\n              onChange={(e) => {\n                setName(e.target.value);\n              }}\n              onFocus={(e) => setFocus(e.target.name)}\n            />\n          </Stack>\n        </form>\n\n        <CustomCenterBox>\n          <Button onClick={onSubmit}>등록</Button>\n          <Button onClick={onClose}>닫기</Button>\n        </CustomCenterBox>\n      </Box>\n    </Box>\n  );\n}\n\nexport default CardInputForm;\n"]},"metadata":{},"sourceType":"module"}